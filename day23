Day 23 of learning javascript
Today I learnt about promises, async and await even further 
#day23 #60DaysOfJs #learningwithkucc

  //  async awaits

// promises

const posts=[
    {title: 'post 1', body:'this is first'},
    {title: 'post 2', body:'this is second'}
];

function getPosts(){
    setTimeout(()=>{ //   ()=> is an arrow function 
        let output ='';
        posts.forEach((post, index)=>{
            output+=`<li>${post.title}</li>`
        })
        document.body.innerHTML =output;
    },10000)
} 

function createPost(post){
    return new Promise((resolve, reject) => {
        setTimeout(()=>{
            posts.push(post)
            const error=false;
            if(!error){
                resolve();
            }else{
                reject('error: something went wrong')
            }
        }, 2000)
    })
}

// async function init(){
//     await createPost({title:'post 3', body:'this is third'})

//     getPosts()
// }

// init()


// async await with fetch 
 async function fetchUsers(){
    const res =await fetch('https://jsonplaceholder.typicode.com/users')

    const data =await res.json()
    console.log(data)
}

fetchUsers()




  // callback

const posts=[
    {title: 'post 1', body:'this is first'},
    {title: 'post 2', body:'this is second'}
];

function getPosts(){
    setTimeout(()=>{ //   ()=> is an arrow function 
        let output ='';
        posts.forEach((post, index)=>{
            output+=`<li>${post.title}</li>`
        })
        document.body.innerHTML =output;
    },10000)
} 

function createPost(post, callback){
    setTimeout(()=>{
        posts.push(post)
        callback()
    }, 2000)
}

// getPosts();

createPost({title:'post 3', body:'this id third'}, getPosts);








<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Async Js</title>
</head>
<body>
    <script src="./promises.js"></script>
</body>
</html>
















  // promises

const posts=[
    {title: 'post 1', body:'this is first'},
    {title: 'post 2', body:'this is second'}
];

function getPosts(){
    setTimeout(()=>{ //   ()=> is an arrow function 
        let output ='';
        posts.forEach((post, index)=>{
            output+=`<li>${post.title}</li>`
        })
        document.body.innerHTML =output;
    },10000)
} 

function createPost(post){
    return new Promise((resolve, reject) => {
        setTimeout(()=>{
            posts.push(post)
            const error=false;
            if(!error){
                resolve();
            }else{
                reject('error: something went wrong')
            }
        }, 2000)
    })
}

// createPost({title:'post 3', body:'this id third'}).then(getPosts).catch(err=>console.log(err))


const promise1 = Promise.resolve('hello world')
const promise2= 10;
const promise3 = new Promise((resolve,reject)=> setTimeout(resolve,2000, 'Goodbye'));
const promise4 =fetch('https://jsonplaceholder.typicode.com/users').then(res =>res.json())
Promise.all([promise1, promise2, promise3, promise4]).then(((values)=>console.log(values)));


